#********************************************************************
# TestWrapper Properties
#
# NOTE - Please use src/conf/wrapper.conf.in as a template for your
#        own application rather than the values used for the
#        TestWrapper sample.
#********************************************************************
# Java Application
#wrapper.java.command=.\jdk\bin\java
wrapper.java.command=c:\jdk8_x86\bin\java

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.iottree.server.ServiceWrapperMain

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=.\tomcat\bin\bootstrap.jar;.\tomcat\bin\tomcat-juli.jar;.\lib\bcpkix-jdk15on-1.61.jar;.\lib\bcprov-jdk15on-1.61.jar;.\lib\bsd-core-0.4.2.jar;.\lib\bsd-generator-0.4.2.jar;.\lib\checker-qual-2.11.1.jar;.\lib\commons-fileupload-1.4.jar;.\lib\commons-io-2.2.jar;.\lib\commons-io-2.4.jar;.\lib\commons-logging-1.2.jar;.\lib\dictionary-manager-0.4.2.jar;.\lib\driver-common-0.92.0.jar;.\lib\driver-opc-0.92.0.jar;.\lib\error_prone_annotations-2.3.4.jar;.\lib\failureaccess-1.0.1.jar;.\lib\fastjson-1.2.74.jar;.\lib\graal-sdk-20.3.0.jar;.\lib\guava-29.0-jre.jar;.\lib\hamcrest-core-1.3.jar;.\lib\icu4j-67.1.jar;.\lib\iottree-core-0.92.0.jar;.\lib\iottree-server-0.92.0.jar;.\lib\istack-commons-runtime-3.0.11.jar;.\lib\j2objc-annotations-1.3.jar;.\lib\jakarta.activation-1.2.2.jar;.\lib\jakarta.xml.bind-api-2.3.3.jar;.\lib\jaxb-runtime-2.3.3.jar;.\lib\js-20.3.0.jar;.\lib\js-scriptengine-20.3.0.jar;.\lib\json-20201115.jar;.\lib\jsr305-3.0.2.jar;.\lib\junit-4.12.jar;.\lib\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;.\lib\mysql-connector-java-8.0.22.jar;.\lib\netty-all-4.1.53.Final.jar;.\lib\netty-buffer-4.1.45.Final.jar;.\lib\netty-channel-fsm-0.4.jar;.\lib\netty-codec-4.1.45.Final.jar;.\lib\netty-codec-http-4.1.45.Final.jar;.\lib\netty-common-4.1.45.Final.jar;.\lib\netty-handler-4.1.45.Final.jar;.\lib\netty-resolver-4.1.45.Final.jar;.\lib\netty-transport-4.1.45.Final.jar;.\lib\org.eclipse.paho.client.mqttv3-1.2.4.jar;.\lib\protobuf-java-3.11.4.jar;.\lib\regex-20.3.0.jar;.\lib\rxtxcomm-2.2.jar;.\lib\sdk-client-0.4.2.jar;.\lib\sdk-core-0.4.2.jar;.\lib\sdk-server-0.4.2.jar;.\lib\slf4j-api-1.7.25.jar;.\lib\spring-beans-5.2.9.RELEASE.jar;.\lib\spring-core-5.2.9.RELEASE.jar;.\lib\spring-jcl-5.2.9.RELEASE.jar;.\lib\spring-web-5.2.9.RELEASE.jar;.\lib\stack-client-0.4.2.jar;.\lib\stack-core-0.4.2.jar;.\lib\stack-server-0.4.2.jar;.\lib\strict-machine-0.3.jar;.\lib\truffle-api-20.3.0.jar;.\lib\txw2-2.3.3.jar;.\lib\wrapper-3.2.3.jar;.\tomcat\lib\annotations-api.jar;.\tomcat\lib\catalina-ant.jar;.\tomcat\lib\catalina-ha.jar;.\tomcat\lib\catalina-storeconfig.jar;.\tomcat\lib\catalina-tribes.jar;.\tomcat\lib\catalina.jar;.\tomcat\lib\ecj-4.4.2.jar;.\tomcat\lib\el-api.jar;.\tomcat\lib\jasper-el.jar;.\tomcat\lib\jasper.jar;.\tomcat\lib\jsp-api.jar;.\tomcat\lib\servlet-api.jar;.\tomcat\lib\tomcat-api.jar;.\tomcat\lib\tomcat-coyote.jar;.\tomcat\lib\tomcat-dbcp.jar;.\tomcat\lib\tomcat-i18n-es.jar;.\tomcat\lib\tomcat-i18n-fr.jar;.\tomcat\lib\tomcat-i18n-ja.jar;.\tomcat\lib\tomcat-jdbc.jar;.\tomcat\lib\tomcat-jni.jar;.\tomcat\lib\tomcat-util-scan.jar;.\tomcat\lib\tomcat-util.jar;.\tomcat\lib\tomcat-websocket.jar;.\tomcat\lib\websocket-api.jar
wrapper.java.classpath.2=

wrapper.java.classpath.3=



# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=./

# Java Additional Parameters
wrapper.java.additional.1=-server

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=64

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=580

# Application parameters.  Add parameters as needed starting from 1
#wrapper.app.parameter.1=

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=./log/wrapper.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=0

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=0

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper Windows Properties
#********************************************************************
# Title to use when running as a console
wrapper.console.title=iottree_server

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.ntservice.name=iottree_server

# Display name of the service
wrapper.ntservice.displayname=iottree_server

# Description of the service
wrapper.ntservice.description=IOT Tree Server

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

